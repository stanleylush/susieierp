<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean 
		DefaultAnnotationHandlerMapping 用来注册handler method和request的mapping关系。
		AnnotationMethodHandlerAdapter 用来在实际调用handler method前对其参数进行处理。
		1、是spring MVC为@Controllers分发请求所必须的
		2、数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，
		3、读写XML的支持（JAXB），读写JSON的支持（Jackson）-->
	<mvc:annotation-driven/>
	<!-- 会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
		它会像一个检查员，对进入DispatcherServlet的URL进行筛查，
		如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，
		如果不是静态资源的请求，才由DispatcherServlet继续处理。
		一般Web应用服务器默认的Servlet名称是"default"，因此DefaultServletHttpRequestHandler可以找到它。
		如果你所有的Web应用服务器的默认Servlet名称不是"default"，则需要通过default-servlet-name属性显示指定 -->
	<mvc:default-servlet-handler/>
	<!-- 由Spring MVC框架自己处理静态资源，并添加一些有用的附加值功能。
		允许静态资源放在任何地方，如WEB-INF目录下、类路径下等，甚至可以将JavaScript等静态文件打到JAR包中。
		通过location属性指定静态资源的位置，由于location属性是Resources类型，因此可以使用诸如"classpath:"等的资源前缀指定资源位置。
		可以通过cacheSeconds属性指定静态资源在浏览器端的缓存时间
		在输出静态资源时，会根据配置设置好响应报文头的Expires 和 Cache-Control值
		在接收到静态资源的获取请求时，会检查请求头的Last-Modified值，如果静态资源没有发生变化，则直接返回303相应状态码，提示客户端使用浏览器缓存的数据。 -->
	<mvc:resources location="" mapping="" />
	<!-- 向Spring容器注册以下四个BeanPostProcessor：
		AutowiredAnnotationBeanPostProcessor  @Autowired
		CommonAnnotationBeanPostProcessor  @ Resource 、@ PostConstruct、@ PreDestroy
		PersistenceAnnotationBeanPostProcessor  @PersistenceContext
		RequiredAnnotationBeanPostProcessor  @Required -->
	<context:annotation-config />
	<context:component-scan base-package="" />
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		<property name="locations">  
			<list>  
                 <value>/WEB-INF/classes/dbconfig.properties</value>  
            </list>  
        </property>  
	</bean>
	
	<!-- 配置SpringMVC的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
</beans>
