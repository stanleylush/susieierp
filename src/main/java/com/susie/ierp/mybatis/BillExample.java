package com.susie.ierp.mybatis;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;

public class BillExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table bill
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table bill
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table bill
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public BillExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bill
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table bill
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andBillNoIsNull() {
			addCriterion("bill_no is null");
			return (Criteria) this;
		}

		public Criteria andBillNoIsNotNull() {
			addCriterion("bill_no is not null");
			return (Criteria) this;
		}

		public Criteria andBillNoEqualTo(String value) {
			addCriterion("bill_no =", value, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoNotEqualTo(String value) {
			addCriterion("bill_no <>", value, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoGreaterThan(String value) {
			addCriterion("bill_no >", value, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoGreaterThanOrEqualTo(String value) {
			addCriterion("bill_no >=", value, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoLessThan(String value) {
			addCriterion("bill_no <", value, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoLessThanOrEqualTo(String value) {
			addCriterion("bill_no <=", value, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoLike(String value) {
			addCriterion("bill_no like", value, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoNotLike(String value) {
			addCriterion("bill_no not like", value, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoIn(List<String> values) {
			addCriterion("bill_no in", values, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoNotIn(List<String> values) {
			addCriterion("bill_no not in", values, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoBetween(String value1, String value2) {
			addCriterion("bill_no between", value1, value2, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillNoNotBetween(String value1, String value2) {
			addCriterion("bill_no not between", value1, value2, "billNo");
			return (Criteria) this;
		}

		public Criteria andBillMnyIsNull() {
			addCriterion("bill_mny is null");
			return (Criteria) this;
		}

		public Criteria andBillMnyIsNotNull() {
			addCriterion("bill_mny is not null");
			return (Criteria) this;
		}

		public Criteria andBillMnyEqualTo(String value) {
			addCriterion("bill_mny =", value, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyNotEqualTo(String value) {
			addCriterion("bill_mny <>", value, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyGreaterThan(String value) {
			addCriterion("bill_mny >", value, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyGreaterThanOrEqualTo(String value) {
			addCriterion("bill_mny >=", value, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyLessThan(String value) {
			addCriterion("bill_mny <", value, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyLessThanOrEqualTo(String value) {
			addCriterion("bill_mny <=", value, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyLike(String value) {
			addCriterion("bill_mny like", value, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyNotLike(String value) {
			addCriterion("bill_mny not like", value, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyIn(List<String> values) {
			addCriterion("bill_mny in", values, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyNotIn(List<String> values) {
			addCriterion("bill_mny not in", values, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyBetween(String value1, String value2) {
			addCriterion("bill_mny between", value1, value2, "billMny");
			return (Criteria) this;
		}

		public Criteria andBillMnyNotBetween(String value1, String value2) {
			addCriterion("bill_mny not between", value1, value2, "billMny");
			return (Criteria) this;
		}

		public Criteria andPayTypeIsNull() {
			addCriterion("pay_type is null");
			return (Criteria) this;
		}

		public Criteria andPayTypeIsNotNull() {
			addCriterion("pay_type is not null");
			return (Criteria) this;
		}

		public Criteria andPayTypeEqualTo(String value) {
			addCriterion("pay_type =", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotEqualTo(String value) {
			addCriterion("pay_type <>", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeGreaterThan(String value) {
			addCriterion("pay_type >", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeGreaterThanOrEqualTo(String value) {
			addCriterion("pay_type >=", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeLessThan(String value) {
			addCriterion("pay_type <", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeLessThanOrEqualTo(String value) {
			addCriterion("pay_type <=", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeLike(String value) {
			addCriterion("pay_type like", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotLike(String value) {
			addCriterion("pay_type not like", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeIn(List<String> values) {
			addCriterion("pay_type in", values, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotIn(List<String> values) {
			addCriterion("pay_type not in", values, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeBetween(String value1, String value2) {
			addCriterion("pay_type between", value1, value2, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotBetween(String value1, String value2) {
			addCriterion("pay_type not between", value1, value2, "payType");
			return (Criteria) this;
		}

		public Criteria andSalesmanIsNull() {
			addCriterion("salesman is null");
			return (Criteria) this;
		}

		public Criteria andSalesmanIsNotNull() {
			addCriterion("salesman is not null");
			return (Criteria) this;
		}

		public Criteria andSalesmanEqualTo(String value) {
			addCriterion("salesman =", value, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanNotEqualTo(String value) {
			addCriterion("salesman <>", value, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanGreaterThan(String value) {
			addCriterion("salesman >", value, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanGreaterThanOrEqualTo(String value) {
			addCriterion("salesman >=", value, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanLessThan(String value) {
			addCriterion("salesman <", value, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanLessThanOrEqualTo(String value) {
			addCriterion("salesman <=", value, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanLike(String value) {
			addCriterion("salesman like", value, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanNotLike(String value) {
			addCriterion("salesman not like", value, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanIn(List<String> values) {
			addCriterion("salesman in", values, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanNotIn(List<String> values) {
			addCriterion("salesman not in", values, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanBetween(String value1, String value2) {
			addCriterion("salesman between", value1, value2, "salesman");
			return (Criteria) this;
		}

		public Criteria andSalesmanNotBetween(String value1, String value2) {
			addCriterion("salesman not between", value1, value2, "salesman");
			return (Criteria) this;
		}

		public Criteria andTsIsNull() {
			addCriterion("ts is null");
			return (Criteria) this;
		}

		public Criteria andTsIsNotNull() {
			addCriterion("ts is not null");
			return (Criteria) this;
		}

		public Criteria andTsEqualTo(Date value) {
			addCriterion("ts =", value, "ts");
			return (Criteria) this;
		}

		public Criteria andTsNotEqualTo(Date value) {
			addCriterion("ts <>", value, "ts");
			return (Criteria) this;
		}

		public Criteria andTsGreaterThan(Date value) {
			addCriterion("ts >", value, "ts");
			return (Criteria) this;
		}

		public Criteria andTsGreaterThanOrEqualTo(Date value) {
			addCriterion("ts >=", value, "ts");
			return (Criteria) this;
		}

		public Criteria andTsLessThan(Date value) {
			addCriterion("ts <", value, "ts");
			return (Criteria) this;
		}

		public Criteria andTsLessThanOrEqualTo(Date value) {
			addCriterion("ts <=", value, "ts");
			return (Criteria) this;
		}

		public Criteria andTsIn(List<Date> values) {
			addCriterion("ts in", values, "ts");
			return (Criteria) this;
		}

		public Criteria andTsNotIn(List<Date> values) {
			addCriterion("ts not in", values, "ts");
			return (Criteria) this;
		}

		public Criteria andTsBetween(Date value1, Date value2) {
			addCriterion("ts between", value1, value2, "ts");
			return (Criteria) this;
		}

		public Criteria andTsNotBetween(Date value1, Date value2) {
			addCriterion("ts not between", value1, value2, "ts");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table bill
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bill
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}